/*
 * Copyright (c) 2020-2023. CodeHead Systems. All rights reserved
 * Ned Wolpert <ned.wolpert@codeheadsystems.com>
 */

apply plugin: 'application'

ext {
    appName = "node"
    configPath = "${rootProject.projectDir}/node/src/main/resources/"
}

configurations {
    jar.archiveBaseName = "${appName}"
}

base {
    archivesName = "${appName}"
    version = "${version}"
}
//jacocoTestReport.finalizedBy jacocoTestCoverageVerification

dependencies {
    implementation project(":common")
    implementation project(':dataStore-common')
    implementation project(':liquibase-common')
    implementation project(":common-javaClient")
    implementation project(":server-common")
    implementation project(":config-common")
    implementation project(":node-common")
    implementation project(":control-common")
    implementation project(":control-javaClient")
    implementation libs.local.queue

    // SQL
    implementation libs.hsqldb
    implementation libs.c3p0
    implementation libs.jdbi.core
    implementation libs.jdbi.testing
    implementation libs.jdbi.jackson2
    implementation libs.jdbi.sqlobject

    // etcd
    implementation libs.jetcd.core
    testImplementation libs.jetcd.test
    implementation libs.metrics.jdbi
    implementation libs.codehead.ff
    implementation libs.codehead.ff.etcd
    implementation libs.codehead.ff.metrics

    implementation libs.openfeign.core

    testImplementation libs.jackson.dataformat.yaml
    testImplementation libs.dropwizard4.testing
    testImplementation project(":node-javaClient")
    testImplementation libs.openfeign.core
    testImplementation libs.openfeign.jackson
    testImplementation libs.openfeign.slf4j
    testImplementation libs.openfeign.micrometer
    testImplementation libs.openfeign.java11
    testImplementation libs.openfeign.jaxrs3

}

application {
    mainClass.set("org.svarm.node.Node")
}

run {
    args 'server', configPath + 'config.yaml'
}

task dockerImage(type: Exec) {
    commandLine "docker", "build", "-t", "svarm/node:${version}", "."
}
dockerImage.dependsOn installDist