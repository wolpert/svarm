
/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the java Plugin to add support for Java.
    java
    idea
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()  // was jcenter() which is dying
    google()

    maven("https://oss.sonatype.org/content/repositories/snapshots/")
    maven("https://oss.sonatype.org/content/repositories/releases/")
    maven("https://s3-us-west-2.amazonaws.com/dynamodb-local/release/")
}

dependencies {
    testImplementation("org.junit.platform:junit-platform-launcher") // used to be runtimeOnly
    // Logging
    implementation("org.slf4j:slf4j-api:2.0.17")
    testImplementation("ch.qos.logback:logback-access:1.5.18")
    testImplementation("ch.qos.logback:logback-classic:1.5.18")
    testImplementation("ch.qos.logback:logback-core:1.5.18")
    // Previous working logging setup
    //    implementation("org.slf4j:slf4j-api:2.0.16")
    //    testImplementation("ch.qos.logback:logback-access:1.4.14")
    //    testImplementation("ch.qos.logback:logback-classic:1.4.14")
    //    testImplementation("ch.qos.logback:logback-core:1.4.14")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withJavadocJar()
    withSourcesJar()
}

tasks.named<Test>("test") {
    useJUnitPlatform()
}
// Ensure we have lint warnings displayed so we can fix or  @SuppressWarnings("unchecked")
tasks.withType<JavaCompile>().configureEach {
    options.compilerArgs.add("-Xlint:unchecked")
}
tasks.javadoc {
    if (JavaVersion.current().isJava9Compatible) {
        (options as StandardJavadocDocletOptions).addBooleanOption("html5", true)
    }
}
